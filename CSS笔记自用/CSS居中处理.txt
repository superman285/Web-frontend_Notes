

垂直居中神文：

https://segmentfault.com/a/1190000000381042


不能居中的常见原因：
🎡因为没有设置宽度！
🎡给元素设置了float，已经不占文档流位置(脱标)，line-height无效化，
但是仍可以设置padding或margin来实现布局。
🎡设置了absolute脱标了，margin:0 auto无效
🎡设置了宽度，但是设置的是min-width，最小宽度!

行内元素/行内块元素水平居中：
给父亲设置text-align:center;

块级元素水平居中：(切记设置块元素宽度)
若想水平拖动窗口仍然自适应居中，则给父亲设置width:100%;而不是固定宽度
margin:0 auto;(只能用于标准流元素，脱标的不可用)
或margin-left:auto;margin-right:auto;

块级元素垂直居中：
✴一般场景下，父亲高度都不固定而是由子元素撑开，
 给父亲设置padding-top\padding-bottom一样则可以让子元素居中了。
✴方法一：把块放进table>tr>td内(table设置好宽高和原父亲一样inherit)

✴方法二：用布局position，自己用绝对，父亲用相对(不好，因为导致自己脱标)
position:absolute;top:50%;transform:translate(0,-50%);或translateY(-50%);
(transform上挪自身高度的50%)第一个值为水平，第二个值垂直
或【margin-top:-(元素高度/2)】;

left:50%;margin-left:-宽度/2;
只能用margin-left,不可用margin-right，
因为margin-right是从右往左，而left值是从左往右，冲突了，margin-right无效化，
margin-left与left一致，所以可以用，带上负值就起到了反向移动的作用。

✴方法二变种：(更优)不会脱标
只把子元素设置relative即可,margin可继续使用！！.element想居中
.element{position:relative;top:50%;transform:translate(0,-50%);}
方法二用margin-top或margin-bottom可能会导致外边距塌陷，最佳还是transform

✴方法2.5：
自己用绝对定位，父亲用相对定位
top:0;bottom:0;margin:auto;(一定要设置top0和bottom0,否则无效)

✴方法三：父亲.father高度450px,后代元素.element400，上下空白各25px，且伪元素不占文档流，可以继续用margin
.element{height:400px;/或height:90%;}
.father:before,.father:after{
            content:"";
            display:block;
            height: 25px;/或height:5%(5%*2+90%等于100%)
}



内部文字水平居中:
text-align:center

文字垂直居中：
👌比较灵活的、实际中用的方法
固定line-height,然后设置padding-top和padding-bottom相同，就可以达到文字垂直居中效果。
若固定父元素高度，在多行文字的时候文字会出界，丑！
👌单行：
line-height:父亲height值
行高=文字大小+上间距+下间距
👌多行：
display:table-cell;
vertical-align:middle;

👌行内块元素垂直居中(如图片):
-可能出现几像素的偏移，给父亲加上font-size:0px解决，或者img转为block
原因是这个方法其实是让图片基于文字中线对齐，而文字中线不一定是真正的垂直居中
所以不一定居中，如果设置文字大小为0，那就成了真正的中线，可以真正居中。
先让文字垂直居中，再给图片设置与文字中线对齐
line-height:父亲height值;
vertical-align:middle;
若不设置vertical-align，相当于图片有默认vertical-align:baseline;往上偏离了3px
设置了vertical-align和lh两步才是真正垂直居中。


✴✴居中大法：
1.flex布局：
👌法一：display:flex;justify-content:center;/水平 align-items:center;/垂直
👌法二：display:flex;margin:auto;/ 水平垂直居中,厉害！！
而且子元素宽度将根据内容自适应，而不是撑开一整行
2.grid布局：
👌法一：justify-content/align-items:center 水平或垂直对齐
👌法二：margin:auto;/ 水平垂直居中，666！！
而且子元素宽度将根据内容自适应，而不是撑开一整行




