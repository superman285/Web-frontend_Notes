
content:url("");content:"ddd"; 设置内容

url(),括号内双引号加不加上都可以让图片生效

```
◉border的妙用
有一定距离的下划线，可用border-bottom实现，还能定义颜色、宽细
页签1 | 页签2 | 页签3  这个“|” 也可用border-left或border-right来实现，好主意！
```

@@@@@@@@@@@@@@@@@@
当使用inline-block布置一行元素时，代码中两个标签分别写在两行(不是浏览器页面是代码中换行)时，
HTML元素之间的空白会显示在页面上，
如
修正方法：
◉方法一：将第二个标签的开头也写在同一行，不换行
◉方法二：在父元素上设置font-size: 0;

注意有字被挤到下一行时先别胡思乱想，可能是字体超出设置的宽度了，就这么简单。

👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌
margin,padding属性值为百分比时，是相对于父元素的宽度！！
包括margin-top,padding-top
切记：div的padding百分比和margin百分比都是相对于div父亲的宽度而言
top和left都是相对width
👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌
为什么margin-top/padding-top的百分数是相对于width而不是height呢？
padding值相对父元素不是指文字内容所在父元素，而是指设定padding值的元素所在父元素
e.g.					outer和inner宽度分别200px,100px
<div .outer>				.inner设置padding-top:50%; 文字会向下100px,而不是50px。
	<div .inner>内边距测</div>
</div>


CSS权威指南中的解释：
我们认为，正常流中的大多数元素都会足够高以包含其后代元素（包括外边距），如果一个元素的上下外边距是父元素的height的百分数，就可能导致一个无限循环。父元素的height会增加，以适应后代元素上下外边距的增加，而相应的，上下外边距因为父元素height的增加也会增加，如此循环。
(高度由于滑轮可一直往下滑会不停增加(下面也有内容),
而宽度100%最大就到整个屏幕了，不会随着margin或padding增加而增加了，虽然也会出滚轮)
👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌

垂直外边距合并:
当给元素设置上下外边距的时候，外边距会以最大值为准，不会进行叠加运算。
👌水平外边距不会合并👌

垂直外边距塌陷：带着父亲一起塌
当父元素没有边框，给子元素设置margin-top或者margin-bottom的时候，
父元素也随之向下移动或者向上移动，解决方法有二：
🔷给父元素设置边框(可设置为内容同色看不出来)
🔷给父元素设置overflow:hidden;
若overflow仍无效，则给父亲的父亲再设置overflow:hidden;

🔷🔷🔷🔷
带图片搜索框常用写法：
div套上input和图片，div可以不设置高度，由input撑开？
这样边框看起来正常点。

🔷🔷🔷🔷
发现margin-top不管用了，估计是用了类w，margin:0 auto;
出现横划线就是被层叠了，这时实在不行就用!important，
不用找错误找太久。


🔷🔷🔷🔷关于行高🔷🔷🔷🔷
块元素由文字撑开时，高度等于行高，而不是文字大小。
行高可以设置百分比或数值v，则值为 v * font-size。
相当于vem. em单位代表字体。


👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌
👌👌👌👌黑马拓展知识👌👌👌👌
👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌👌



🔷🔷🔷🔷
relative相对定位使用
当想改变元素位置时，如果调padding或margin会影响其他一堆元素，
不想影响这些元素时，可以直接用相对定位，
position:relative; 然后设置trbl值


🔷🔷🔷🔷
负margin的使用:
1.处理两个带边框盒子相邻时边框变粗的问题。(用浮动或行内块让两个盒子同行)
让右边盒子设置margin-left:-1px;即可让右边盒子往左贴。
这时如果鼠标移到左边盒子，右边框会被盖住，不生效，所以在
.box1:hover{position:relative;z-index:6;} 需要在被选中时提高层级，此时不会影响其他盒子。

🔷🔷🔷🔷
全屏铺满：
🔷方法一：
.box,body,html{
	width:100%;
	height:100%;
}
body和html本身都是块元素，没有高度，宽度铺满浏览器
html的父元素是浏览器，这时继承宽度，就是全屏了。

🔷方法二：
参照浏览器
.box{
	position:fixed/absolute;width:100%;height:100%;
}
absolute也可以是因为，它会参照第一个带定位的祖先，
而body、html都不带定位属性，所以就参照更上级浏览器，所以就铺满全屏。
🔷方法三：
单位:.box{width:100vw;height:100vh}






